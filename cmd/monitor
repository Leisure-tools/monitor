#!/bin/sh
SRC=$(realpath "$0")
DIR=$(dirname "$SRC")
V="-v"

usage() {
   echo 1>&2 "usage: $(basename "$SRC") DOCID FILE [-c REDISCONF] [-h REDISHOST] [-u SOCKET | -t SOCKET]"
   exit 1
}

if [ $# -lt 2 ]; then
    usage
fi

DOCID="$1"
FILE="$(realpath "$2")"

shift 2

UNIXSOCK=true
SOCK="$HOME/.monitor.socket"
SOCKARG="-u $SOCK"

while [ $# -gt 0 ]; do
    case "$1" in
        -c)
            REDISCONFARG="--redis-conf"
            REDISCONF="$2"
        ;;
        -h)
            REDISHOST="$2"
        ;;
        -u)
            SOCKARG="-u $2"
            SOCK="$2"
            ;;
        -t)
            UNIXSOCK=false
            SOCKARG="-h $2"
        ;;
        *)
            usage
        ;;
    esac
    shift 2
done

[ "$UNIXSOCK" = true ] && [ -S "$SOCK" ] && rm -f "$SOCK"

if [ "$REDISCONF" != "" -a "$REDISHOST" != "" ]; then
    REDISCONFARG="--redis-host $REDISHOST --redis-conf"
    REDISHOST=""
fi

runcmd() {
    #echo 1>&2 RUN "$DIR/cmd" $V "$@"
    if ! "$DIR/cmd" $V "$@"; then
        exit 1
    fi
}

(cd "$DIR"; go build) || {
    echo 1>&2 Go build failed
    exit 1
}

MONITORFILEPID="" 
MONITORPID=""
echo "$DIR/cmd" serve $SOCKARG $REDISCONFARG $REDISCONF $REDISHOST
"$DIR/cmd" serve $V $SOCKARG $REDISCONFARG $REDISCONF $REDISHOST >/tmp/server.log 2>&1 &
SERVERPID=$!

sleep 2

echo runcmd clear $SOCKARG
runcmd clear $SOCKARG > /tmp/add.log 2>&1

echo runcmd add $SOCKARG "$DOCID" "$FILE"
runcmd add $SOCKARG "$DOCID" "$FILE" >> /tmp/add.log 2>&1

die() {
    kill "$SERVERPID"
    exit 1
}

trap "echo EXITING; die" EXIT
trap exit INT TERM

wait
